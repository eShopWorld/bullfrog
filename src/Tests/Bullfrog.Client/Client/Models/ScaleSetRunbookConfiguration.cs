// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ScaleSetRunbookConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ScaleSetRunbookConfiguration
        /// class.
        /// </summary>
        public ScaleSetRunbookConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScaleSetRunbookConfiguration
        /// class.
        /// </summary>
        public ScaleSetRunbookConfiguration(string automationAccountName, string runbookName, string scaleSetName = default(string))
        {
            AutomationAccountName = automationAccountName;
            RunbookName = runbookName;
            ScaleSetName = scaleSetName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "automationAccountName")]
        public string AutomationAccountName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "runbookName")]
        public string RunbookName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scaleSetName")]
        public string ScaleSetName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AutomationAccountName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AutomationAccountName");
            }
            if (RunbookName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RunbookName");
            }
        }
    }
}
