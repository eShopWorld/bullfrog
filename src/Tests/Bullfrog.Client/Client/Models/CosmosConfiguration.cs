// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CosmosConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the CosmosConfiguration class.
        /// </summary>
        public CosmosConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CosmosConfiguration class.
        /// </summary>
        public CosmosConfiguration(string name, CosmosDbDataPlaneConnection dataPlaneConnection = default(CosmosDbDataPlaneConnection), CosmosDbControlPlaneConnection controlPlaneConnection = default(CosmosDbControlPlaneConnection), double? requestUnitsPerRequest = default(double?), int? minimumRU = default(int?), int? maximumRU = default(int?))
        {
            Name = name;
            DataPlaneConnection = dataPlaneConnection;
            ControlPlaneConnection = controlPlaneConnection;
            RequestUnitsPerRequest = requestUnitsPerRequest;
            MinimumRU = minimumRU;
            MaximumRU = maximumRU;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataPlaneConnection")]
        public CosmosDbDataPlaneConnection DataPlaneConnection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlPlaneConnection")]
        public CosmosDbControlPlaneConnection ControlPlaneConnection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestUnitsPerRequest")]
        public double? RequestUnitsPerRequest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minimumRU")]
        public int? MinimumRU { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maximumRU")]
        public int? MaximumRU { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (DataPlaneConnection != null)
            {
                DataPlaneConnection.Validate();
            }
            if (ControlPlaneConnection != null)
            {
                ControlPlaneConnection.Validate();
            }
        }
    }
}
