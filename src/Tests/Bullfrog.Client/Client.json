{
  "swagger": "2.0",
  "info": {
    "title": "Bullfrog Api",
    "version": "0.2"
  },
  "paths": {
    "/api/Configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Lists names of all configured scale groups.",
        "operationId": "ListScaleGroups",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Configurations/{scaleGroup}": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Gets the definition of the specified scale group.",
        "operationId": "GetDefinition",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The scale group name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScaleGroupDefinition"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Configurations"
        ],
        "summary": "Configures the specified scale group.",
        "operationId": "SetDefinition",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The name of the scale group to configure.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "When enabled only validates the new configuration but not saves it.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The new or updated configuration of the scale group.",
            "schema": {
              "$ref": "#/definitions/ScaleGroupDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Configurations"
        ],
        "summary": "Removes the scale group.",
        "operationId": "RemoveDefinition",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The name of the scale group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/probe": {
      "get": {
        "tags": [
          "Probe"
        ],
        "summary": "probe endpoint",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ScaleEvents/{scaleGroup}": {
      "get": {
        "tags": [
          "ScaleEvents"
        ],
        "summary": "Lists all scheduled events from the specified scale group.",
        "operationId": "ListScheduledEvents",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The name of the scale group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "activeOnly",
            "description": "If true only not completed events are returned.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "fromRegion",
            "description": "Returns events from the specified region.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledScaleEvent"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ScaleEvents/{scaleGroup}/{eventId}": {
      "get": {
        "tags": [
          "ScaleEvents"
        ],
        "summary": "Gets the specified scale event.",
        "operationId": "GetScheduledEvent",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The scale group which own the event.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "The scale event ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduledScaleEvent"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScaleEvents"
        ],
        "summary": "Creates or updates the scale event.",
        "operationId": "SaveScaleEvent",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The scale group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "The scale event ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The new definition of the scale group.",
            "schema": {
              "$ref": "#/definitions/ScaleEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduledScaleEvent"
            }
          },
          "202": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScaleEvents"
        ],
        "summary": "Deletes the scale event.",
        "operationId": "DeleteScaleEvent",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The scale group which owns the event.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "The ID of the event to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ScaleGroups/{scaleGroup}": {
      "get": {
        "tags": [
          "ScaleGroups"
        ],
        "summary": "Gets the current state of the specified scale group.",
        "operationId": "GetCurrentState",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scaleGroup",
            "description": "The name of the scale group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScaleGroupState"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ScaleSetConfiguration": {
      "description": "Configuration of virtual machine scale set which is part of the scale group.",
      "required": [
        "autoscaleSettingsResourceId",
        "loadBalancerResourceId",
        "name",
        "profileName"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name used as an identifier of this VM scale set configuration.",
          "type": "string"
        },
        "autoscaleSettingsResourceId": {
          "description": "The resource id of the autoscale settings which controls virtual machine scale set scaling.",
          "type": "string"
        },
        "profileName": {
          "description": "The name of the profile of autoscale settings which is used to control VMSS scaling.",
          "type": "string"
        },
        "loadBalancerResourceId": {
          "description": "The resource id of a load balancer of virtual machine scale set.",
          "type": "string"
        },
        "healthPortPort": {
          "format": "int32",
          "description": "The port used for health probes by a load balancer which should be used to check\r\navailability of VMs in the scale set.",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "requestsPerInstance": {
          "format": "int32",
          "description": "The number of requests per VMSS instance",
          "maximum": 1000000000,
          "minimum": 0,
          "type": "integer"
        },
        "minInstanceCount": {
          "format": "int32",
          "description": "The minimal number of instances defined in the profile.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        },
        "reservedInstances": {
          "format": "double",
          "description": "The number (might be partial) of VM instances which are not used to handle requests.",
          "type": "number"
        }
      }
    },
    "CosmosDbDataPlaneConnection": {
      "required": [
        "accountName",
        "databaseName"
      ],
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        }
      }
    },
    "CosmosDbControlPlaneConnection": {
      "required": [
        "accountResurceId",
        "databaseName"
      ],
      "type": "object",
      "properties": {
        "accountResurceId": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        }
      }
    },
    "CosmosConfiguration": {
      "description": "Defines a Cosmos DB database or a container which is should be scaled to handle requested throughput.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name used as an identifier of this Cosmos DB instance.",
          "type": "string"
        },
        "dataPlaneConnection": {
          "$ref": "#/definitions/CosmosDbDataPlaneConnection"
        },
        "controlPlaneConnection": {
          "$ref": "#/definitions/CosmosDbControlPlaneConnection"
        },
        "requestUnitsPerRequest": {
          "format": "double",
          "description": "The number of Request Units used on average by each request.",
          "type": "number"
        },
        "minimumRU": {
          "format": "int32",
          "description": "The minimal value of RU used when there are no active events.",
          "type": "integer"
        },
        "maximumRU": {
          "format": "int32",
          "description": "The maximal value of RU. No scaling operation will exceed it.",
          "type": "integer"
        }
      }
    },
    "TimeSpan": {
      "type": "object",
      "properties": {
        "ticks": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "days": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "totalDays": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalHours": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalMilliseconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalMinutes": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalSeconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "ScaleGroupRegion": {
      "description": "The scale group's region configuration.",
      "required": [
        "regionName",
        "scaleSets"
      ],
      "type": "object",
      "properties": {
        "regionName": {
          "description": "The name of the region.",
          "pattern": "^[\\d\\w\\s-]*$",
          "type": "string"
        },
        "scaleSets": {
          "description": "The configurations of scaling of VM scale sets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleSetConfiguration"
          }
        },
        "cosmos": {
          "description": "The configuration of scaling of Cosmos DB databases or containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CosmosConfiguration"
          }
        },
        "scaleSetPrescaleLeadTime": {
          "$ref": "#/definitions/TimeSpan"
        },
        "cosmosDbPrescaleLeadTime": {
          "$ref": "#/definitions/TimeSpan"
        },
        "maxScale": {
          "format": "int32",
          "description": "The maximum scale supported for this region.",
          "type": "integer"
        },
        "maxLeadTime": {
          "$ref": "#/definitions/TimeSpan"
        }
      }
    },
    "ScaleGroupDefinition": {
      "description": "Defines the configuration of a scale group.",
      "required": [
        "regions"
      ],
      "type": "object",
      "properties": {
        "regions": {
          "description": "The configurations of scale group's regions.",
          "minLength": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleGroupRegion"
          }
        },
        "cosmos": {
          "description": "The configuration of scaling of Cosmos DB databases or containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CosmosConfiguration"
          }
        },
        "cosmosDbPrescaleLeadTime": {
          "$ref": "#/definitions/TimeSpan"
        },
        "oldEventsAge": {
          "$ref": "#/definitions/TimeSpan"
        },
        "hasSharedCosmosDb": {
          "description": "Checks whether shared Cosmos databases are defined.",
          "type": "boolean",
          "readOnly": true
        },
        "allRegionNames": {
          "description": "Returns names of all regions (including shared Cosmos region if it exists).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "RegionScaleValue": {
      "description": "Defines the scale requirements for the specified region.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The region name.",
          "type": "string"
        },
        "scale": {
          "format": "int32",
          "description": "The number of requests that the region should be able to handle during the scale event.",
          "maximum": 1000000,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "ScheduledScaleEvent": {
      "description": "Describes an existing scale event.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Identifier of the scale event.",
          "type": "string"
        },
        "name": {
          "description": "Name of the scale event.",
          "type": "string"
        },
        "requiredScaleAt": {
          "format": "date-time",
          "description": "The time when all resources should be scaled to the level which allows to handle the requested traffic.",
          "type": "string"
        },
        "estimatedScaleUpAt": {
          "format": "date-time",
          "description": "The estimated time when the scaling of resources start.",
          "type": "string"
        },
        "startScaleDownAt": {
          "format": "date-time",
          "description": "The time when the scale event ends and all resources can be scaled in.",
          "type": "string"
        },
        "regionConfig": {
          "description": "The list of regions which require scaling.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionScaleValue"
          }
        }
      }
    },
    "ScaleEvent": {
      "description": "Defines a new scale event.",
      "required": [
        "name",
        "regionConfig"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The scale event name.",
          "type": "string"
        },
        "requiredScaleAt": {
          "format": "date-time",
          "description": "The time when all resources should be scaled to the level which allows to handle the requested traffic.",
          "type": "string"
        },
        "startScaleDownAt": {
          "format": "date-time",
          "description": "The time when the scale event ends and all resources can be scaled in.",
          "type": "string"
        },
        "regionConfig": {
          "description": "The list of regions which require scaling.",
          "minLength": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionScaleValue"
          }
        }
      }
    },
    "ScaleRegionState": {
      "description": "Describes the current state of the region of a scale group.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the region.",
          "type": "string"
        },
        "wasScaledUpAt": {
          "format": "date-time",
          "description": "The time when the resources ware scaled out.",
          "type": "string"
        },
        "willScaleDownAt": {
          "format": "date-time",
          "description": "The time when the resources will be scaled in to the minimal value.",
          "type": "string"
        },
        "scale": {
          "format": "double",
          "description": "The number of requests which can be processed currently.",
          "type": "number"
        },
        "requestedScale": {
          "format": "int32",
          "description": "The scale which is requested by scale events.",
          "type": "integer"
        },
        "scaleSetState": {
          "description": "State of each scale set.",
          "type": "object",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "ScaleGroupState": {
      "description": "Describes the current state of the scale group.",
      "type": "object",
      "properties": {
        "regions": {
          "description": "The list of scale group's regions which currently are scaled out.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRegionState"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Please insert JWT with Bearer into field"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}